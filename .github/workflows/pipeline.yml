on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup .Net Core SDK
        uses: actions/setup-dotnet@v2

      - name: install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --no-restore --verbosity normal

      - name: Publish
        run: dotnet publish -c Release -o website
        working-directory: ./

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          name: website
          path: ./website/**
          if-no-files-found: error

      - name: Upload a build artifact
        uses: actions/upload-artifact@v2.2.2
        with:
          name: iac
          path: ./infrastructure.bicep
          if-no-files-found: error

  merge_job:
    needs: [build]
    if: (github.ref == 'refs/heads/main') && needs.build.result == 'success'
    runs-on: ubuntu-latest
    environment: foo-dev
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.8
        with:
          name: website
          path: website

      - name: Download a Build Artifact
        uses: actions/download-artifact@v2.0.8
        with:
          name: iac
          path: iac

      - name: "Az CLI login"
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Run Bicep deploy
        id: deploy
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: foo-dev
          template: iac/infrastructure.bicep
          parameters: env='fooDev'

      - name: Deploy web app
        id: deploywebapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: appService-fooDev
          package: website
